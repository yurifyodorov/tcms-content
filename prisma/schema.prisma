generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Run {
  id             String    @id @default(cuid())
  runNumber      Int       @unique @default(autoincrement())
  status         String
  browser        String
  platform       String
  featuresCount  Int
  scenariosCount Int
  stepsCount     Int
  passCount      Int       @default(0)
  failCount      Int       @default(0)
  skipCount      Int       @default(0)
  features       Feature[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  duration       Int?
  auto           Boolean

  @@index([status])
  @@index([platform])
  @@index([auto])
  @@index([createdAt])
  @@index([status, createdAt])
  @@map("runs")
}

model Feature {
  id          String     @id @default(cuid())
  name        String
  description String?
  uri         String
  runId       String
  run         Run        @relation(fields: [runId], references: [id])
  scenarios   Scenario[]
  duration    Int?

  @@index([runId])
  @@map("features")
}

model Scenario {
  id        String   @id @default(cuid())
  featureId String
  runId     String
  name      String
  line      Int?
  status    String
  message   String?
  tags      String[]
  feature   Feature  @relation(fields: [featureId], references: [id])
  steps     Step[]
  duration  Int?

  @@index([featureId])
  @@index([runId])
  @@map("scenarios")
}

model Step {
  id         String     @id @default(cuid())
  scenarioId String
  runId      String
  name       String
  status     StepStatus
  duration   Int?
  message    String?
  media      Json?
  scenario   Scenario   @relation(fields: [scenarioId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([scenarioId])
  @@index([status])
  @@index([runId])
  @@map("steps")
}

enum StepStatus {
  passed
  failed
  skipped
}
